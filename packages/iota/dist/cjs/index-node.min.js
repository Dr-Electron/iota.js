!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("node-fetch"),require("@iota/crypto.js"),require("big-integer"),require("@iota/util.js")):"function"==typeof define&&define.amd?define(["exports","node-fetch","@iota/crypto.js","big-integer","@iota/util.js"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).Iota={},e["node-fetch"],e.IotaCrypto,e.bigInt,e.IotaUtil)}(this,(function(e,t,n,s,r){"use strict";function i(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var o=i(t),a=i(s);globalThis&&!globalThis.fetch&&(globalThis.fetch=o.default);class d{constructor(e){this._publicKey=e}toAddress(){return n.Blake2b.sum256(this._publicKey)}verify(e){return n.ArrayHelper.equal(this.toAddress(),e)}}d.ADDRESS_LENGTH=n.Blake2b.SIZE_256;const u=n.Blake2b.SIZE_256,l=n.Blake2b.SIZE_256,c=n.Blake2b.SIZE_256,h=1+d.ADDRESS_LENGTH;function p(e){if(!e.hasRemaining(h))throw new Error(`Ed25519 address data is ${e.length()} in length which is less than the minimimum size required of ${h}`);const t=e.readByte("ed25519Address.type");if(0!==t)throw new Error(`Type mismatch in ed25519Address ${t}`);return{type:0,address:e.readFixedHex("ed25519Address.address",d.ADDRESS_LENGTH)}}function y(e,t){e.writeByte("ed25519Address.type",t.type),e.writeFixedHex("ed25519Address.address",d.ADDRESS_LENGTH,t.address)}const f=h;function g(e){if(!e.hasRemaining(f))throw new Error(`Address data is ${e.length()} in length which is less than the minimimum size required of ${f}`);const t=e.readByte("address.type",!1);let n;if(0!==t)throw new Error(`Unrecognized address type ${t}`);return n=p(e),n}function m(e,t){if(0!==t.type)throw new Error(`Unrecognized address type ${t.type}`);y(e,t)}const w=49+f+8;function T(e){const t=e.readUInt16("funds.numFunds"),n=[];for(let s=0;s<t;s++)n.push(E(e));return n}function I(e,t){if(t.length>127)throw new Error(`The maximum number of funds is 127, you have provided ${t.length}`);e.writeUInt16("funds.numFunds",t.length);for(let n=0;n<t.length;n++)_(e,t[n])}function E(e){if(!e.hasRemaining(w))throw new Error(`Migrated funds data is ${e.length()} in length which is less than the minimimum size required of ${w}`);const t=e.readFixedHex("migratedFunds.tailTransactionHash",49),n=g(e),s=e.readUInt64("migratedFunds.deposit");return{tailTransactionHash:t,address:n,deposit:Number(s)}}function _(e,t){e.writeFixedHex("migratedFunds.tailTransactionHash",49,t.tailTransactionHash),m(e,t.address),e.writeUInt64("migratedFunds.deposit",a.default(t.deposit))}const U=1+l;function x(e){if(!e.hasRemaining(U))throw new Error(`Treasury Input data is ${e.length()} in length which is less than the minimimum size required of ${U}`);const t=e.readByte("treasuryInput.type");if(1!==t)throw new Error(`Type mismatch in treasuryInput ${t}`);return{type:1,milestoneId:e.readFixedHex("treasuryInput.milestoneId",l)}}function $(e,t){e.writeByte("treasuryInput.type",t.type),e.writeFixedHex("treasuryInput.milestoneId",l,t.milestoneId)}const S=1+l+2;function P(e){if(!e.hasRemaining(S))throw new Error(`UTXO Input data is ${e.length()} in length which is less than the minimimum size required of ${S}`);const t=e.readByte("utxoInput.type");if(0!==t)throw new Error(`Type mismatch in utxoInput ${t}`);return{type:0,transactionId:e.readFixedHex("utxoInput.transactionId",l),transactionOutputIndex:e.readUInt16("utxoInput.transactionOutputIndex")}}function M(e,t){e.writeByte("utxoInput.type",t.type),e.writeFixedHex("utxoInput.transactionId",l,t.transactionId),e.writeUInt16("utxoInput.transactionOutputIndex",t.transactionOutputIndex)}const A=Math.min(S,U);function N(e){const t=e.readUInt16("inputs.numInputs"),n=[];for(let s=0;s<t;s++)n.push(v(e));return n}function R(e,t){if(t.length<1)throw new Error(`The minimum number of inputs is 1, you have provided ${t.length}`);if(t.length>127)throw new Error(`The maximum number of inputs is 127, you have provided ${t.length}`);e.writeUInt16("inputs.numInputs",t.length);for(let n=0;n<t.length;n++)B(e,t[n])}function v(e){if(!e.hasRemaining(A))throw new Error(`Input data is ${e.length()} in length which is less than the minimimum size required of ${A}`);const t=e.readByte("input.type",!1);let n;if(0===t)n=P(e);else{if(1!==t)throw new Error(`Unrecognized input type ${t}`);n=x(e)}return n}function B(e,t){if(0===t.type)M(e,t);else{if(1!==t.type)throw new Error(`Unrecognized input type ${t.type}`);$(e,t)}}const O=64;const H=16+u+u+c+8+1+n.Ed25519.PUBLIC_KEY_SIZE+1+n.Ed25519.SIGNATURE_SIZE;const k=10+w;const b=1+f+8;function L(e){if(!e.hasRemaining(b))throw new Error(`Signature Locked Dust Allowance Output data is ${e.length()} in length which is less than the minimimum size required of ${b}`);const t=e.readByte("sigLockedDustAllowanceOutput.type");if(1!==t)throw new Error(`Type mismatch in sigLockedDustAllowanceOutput ${t}`);const n=g(e),s=e.readUInt64("sigLockedDustAllowanceOutput.amount");return{type:1,address:n,amount:Number(s)}}function C(e,t){e.writeByte("sigLockedDustAllowanceOutput.type",t.type),m(e,t.address),e.writeUInt64("sigLockedDustAllowanceOutput.amount",a.default(t.amount))}const z=1+f+8;function F(e){if(!e.hasRemaining(z))throw new Error(`Simple Output data is ${e.length()} in length which is less than the minimimum size required of ${z}`);const t=e.readByte("simpleOutput.type");if(0!==t)throw new Error(`Type mismatch in simpleOutput ${t}`);const n=g(e),s=e.readUInt64("simpleOutput.amount");return{type:0,address:n,amount:Number(s)}}function K(e,t){e.writeByte("simpleOutput.type",t.type),m(e,t.address),e.writeUInt64("simpleOutput.amount",a.default(t.amount))}function D(e){if(!e.hasRemaining(9))throw new Error(`Treasury Output data is ${e.length()} in length which is less than the minimimum size required of 9`);const t=e.readByte("treasuryOutput.type");if(2!==t)throw new Error(`Type mismatch in treasuryOutput ${t}`);const n=e.readUInt64("treasuryOutput.amount");return{type:2,amount:Number(n)}}function Y(e,t){e.writeByte("treasuryOutput.type",t.type),e.writeUInt64("treasuryOutput.amount",a.default(t.amount))}const G=Math.min(z,b);function W(e){const t=e.readUInt16("outputs.numOutputs"),n=[];for(let s=0;s<t;s++)n.push(X(e));return n}function q(e,t){if(t.length<1)throw new Error(`The minimum number of outputs is 1, you have provided ${t.length}`);if(t.length>127)throw new Error(`The maximum number of outputs is 127, you have provided ${t.length}`);e.writeUInt16("outputs.numOutputs",t.length);for(let n=0;n<t.length;n++)Z(e,t[n])}function X(e){if(!e.hasRemaining(G))throw new Error(`Output data is ${e.length()} in length which is less than the minimimum size required of ${G}`);const t=e.readByte("output.type",!1);let n;if(0===t)n=F(e);else if(1===t)n=L(e);else{if(2!==t)throw new Error(`Unrecognized output type ${t}`);n=D(e)}return n}function Z(e,t){if(0===t.type)K(e,t);else if(1===t.type)C(e,t);else{if(2!==t.type)throw new Error(`Unrecognized output type ${t.type}`);Y(e,t)}}function J(e){if(!e.hasRemaining(9))throw new Error(`Transaction essence data is ${e.length()} in length which is less than the minimimum size required of 9`);const t=e.readByte("transactionEssence.type");if(0!==t)throw new Error(`Type mismatch in transactionEssence ${t}`);const n=N(e),s=W(e),r=ge(e);if(r&&2!==r.type)throw new Error("Transaction essence can only contain embedded Indexation Payload");for(const e of n)if(0!==e.type)throw new Error("Transaction essence can only contain UTXO Inputs");for(const e of s)if(0!==e.type)throw new Error("Transaction essence can only contain simple outputs");return{type:0,inputs:n,outputs:s,payload:r}}function j(e,t){e.writeByte("transactionEssence.type",t.type);for(const e of t.inputs)if(0!==e.type)throw new Error("Transaction essence can only contain UTXO Inputs");R(e,t.inputs);for(const e of t.outputs)if(0!==e.type&&1!==e.type)throw new Error("Transaction essence can only contain sig locked single input or sig locked dust allowance outputs");q(e,t.outputs),me(e,t.payload)}function V(e){if(!e.hasRemaining(3))throw new Error(`Reference Unlock Block data is ${e.length()} in length which is less than the minimimum size required of 3`);const t=e.readByte("referenceUnlockBlock.type");if(1!==t)throw new Error(`Type mismatch in referenceUnlockBlock ${t}`);return{type:1,reference:e.readUInt16("referenceUnlockBlock.reference")}}function Q(e,t){e.writeByte("referenceUnlockBlock.type",t.type),e.writeUInt16("referenceUnlockBlock.reference",t.reference)}const ee=1+n.Ed25519.SIGNATURE_SIZE+n.Ed25519.PUBLIC_KEY_SIZE;function te(e){if(!e.hasRemaining(ee))throw new Error(`Ed25519 signature data is ${e.length()} in length which is less than the minimimum size required of ${ee}`);const t=e.readByte("ed25519Signature.type");if(0!==t)throw new Error(`Type mismatch in ed25519Signature ${t}`);return{type:0,publicKey:e.readFixedHex("ed25519Signature.publicKey",n.Ed25519.PUBLIC_KEY_SIZE),signature:e.readFixedHex("ed25519Signature.signature",n.Ed25519.SIGNATURE_SIZE)}}function ne(e,t){e.writeByte("ed25519Signature.type",t.type),e.writeFixedHex("ed25519Signature.publicKey",n.Ed25519.PUBLIC_KEY_SIZE,t.publicKey),e.writeFixedHex("ed25519Signature.signature",n.Ed25519.SIGNATURE_SIZE,t.signature)}const se=ee;function re(e){if(!e.hasRemaining(se))throw new Error(`Signature data is ${e.length()} in length which is less than the minimimum size required of ${se}`);const t=e.readByte("signature.type",!1);let n;if(0!==t)throw new Error(`Unrecognized signature type ${t}`);return n=te(e),n}function ie(e,t){if(0!==t.type)throw new Error(`Unrecognized signature type ${t.type}`);ne(e,t)}const oe=1+se;function ae(e){if(!e.hasRemaining(oe))throw new Error(`Signature Unlock Block data is ${e.length()} in length which is less than the minimimum size required of ${oe}`);const t=e.readByte("signatureUnlockBlock.type");if(0!==t)throw new Error(`Type mismatch in signatureUnlockBlock ${t}`);return{type:0,signature:re(e)}}function de(e,t){e.writeByte("signatureUnlockBlock.type",t.type),ie(e,t.signature)}const ue=Math.min(oe,3);function le(e){const t=e.readUInt16("transactionEssence.numUnlockBlocks"),n=[];for(let s=0;s<t;s++)n.push(he(e));return n}function ce(e,t){e.writeUInt16("transactionEssence.numUnlockBlocks",t.length);for(let n=0;n<t.length;n++)pe(e,t[n])}function he(e){if(!e.hasRemaining(ue))throw new Error(`Unlock Block data is ${e.length()} in length which is less than the minimimum size required of ${ue}`);const t=e.readByte("unlockBlock.type",!1);let n;if(0===t)n=ae(e);else{if(1!==t)throw new Error(`Unrecognized unlock block type ${t}`);n=V(e)}return n}function pe(e,t){if(0===t.type)de(e,t);else{if(1!==t.type)throw new Error(`Unrecognized unlock block type ${t.type}`);Q(e,t)}}const ye=4+U+9;const fe=Math.min(8,H,9,k,ye);function ge(e){const t=e.readUInt32("payload.length");if(!e.hasRemaining(t))throw new Error(`Payload length ${t} exceeds the remaining data ${e.unused()}`);let s;if(t>0){const t=e.readUInt32("payload.type",!1);if(0===t)s=function(e){if(!e.hasRemaining(8))throw new Error(`Transaction Payload data is ${e.length()} in length which is less than the minimimum size required of 8`);const t=e.readUInt32("payloadTransaction.type");if(0!==t)throw new Error(`Type mismatch in payloadTransaction ${t}`);let n,s;if(0!==e.readByte("payloadTransaction.essenceType",!1))throw new Error(`Unrecognized transaction essence type ${t}`);return n=J(e),s=le(e),{type:0,essence:n,unlockBlocks:s}}(e);else if(1===t)s=function(e){if(!e.hasRemaining(H))throw new Error(`Milestone Payload data is ${e.length()} in length which is less than the minimimum size required of ${H}`);const t=e.readUInt32("payloadMilestone.type");if(1!==t)throw new Error(`Type mismatch in payloadMilestone ${t}`);const s=e.readUInt32("payloadMilestone.index"),r=e.readUInt64("payloadMilestone.timestamp"),i=e.readByte("payloadMilestone.numParents"),o=[];for(let t=0;t<i;t++){const n=e.readFixedHex(`payloadMilestone.parentMessageId${t+1}`,u);o.push(n)}const a=e.readFixedHex("payloadMilestone.inclusionMerkleProof",c),d=e.readUInt32("payloadMilestone.nextPoWScore"),l=e.readUInt32("payloadMilestone.nextPoWScoreMilestoneIndex"),h=e.readByte("payloadMilestone.publicKeysCount"),p=[];for(let t=0;t<h;t++)p.push(e.readFixedHex("payloadMilestone.publicKey",n.Ed25519.PUBLIC_KEY_SIZE));const y=ge(e);if(y&&3!==y.type)throw new Error("Milestones only support embedded receipt payload type");const f=e.readByte("payloadMilestone.signaturesCount"),g=[];for(let t=0;t<f;t++)g.push(e.readFixedHex("payloadMilestone.signature",n.Ed25519.SIGNATURE_SIZE));return{type:1,index:s,timestamp:Number(r),parentMessageIds:o,inclusionMerkleProof:a,nextPoWScore:d,nextPoWScoreMilestoneIndex:l,publicKeys:p,receipt:y,signatures:g}}(e);else if(2===t)s=function(e){if(!e.hasRemaining(9))throw new Error(`Indexation Payload data is ${e.length()} in length which is less than the minimimum size required of 9`);const t=e.readUInt32("payloadIndexation.type");if(2!==t)throw new Error(`Type mismatch in payloadIndexation ${t}`);const n=e.readUInt16("payloadIndexation.indexLength"),s=e.readFixedHex("payloadIndexation.index",n),r=e.readUInt32("payloadIndexation.dataLength");return{type:2,index:s,data:e.readFixedHex("payloadIndexation.data",r)}}(e);else if(3===t)s=function(e){if(!e.hasRemaining(k))throw new Error(`Receipt Payload data is ${e.length()} in length which is less than the minimimum size required of ${k}`);const t=e.readUInt32("payloadReceipt.type");if(3!==t)throw new Error(`Type mismatch in payloadReceipt ${t}`);const n=e.readUInt32("payloadReceipt.migratedAt"),s=e.readBoolean("payloadReceipt.final"),r=T(e),i=ge(e);if(!i||4!==i.type)throw new Error(`payloadReceipts can only contain treasury payloads ${t}`);return{type:3,migratedAt:n,final:s,funds:r,transaction:i}}(e);else{if(4!==t)throw new Error(`Unrecognized payload type ${t}`);s=function(e){if(!e.hasRemaining(ye))throw new Error(`Treasure Transaction Payload data is ${e.length()} in length which is less than the minimimum size required of ${ye}`);const t=e.readUInt32("payloadTreasuryTransaction.type");if(4!==t)throw new Error(`Type mismatch in payloadTreasuryTransaction ${t}`);return{type:4,input:x(e),output:D(e)}}(e)}}return s}function me(e,t){const s=e.getWriteIndex();if(e.writeUInt32("payload.length",0),t)if(0===t.type)!function(e,t){if(e.writeUInt32("payloadMilestone.type",t.type),0!==t.type)throw new Error(`Unrecognized transaction type ${t.type}`);j(e,t.essence),ce(e,t.unlockBlocks)}(e,t);else if(1===t.type)!function(e,t){if(e.writeUInt32("payloadMilestone.type",t.type),e.writeUInt32("payloadMilestone.index",t.index),e.writeUInt64("payloadMilestone.timestamp",a.default(t.timestamp)),t.parentMessageIds.length<Ee)throw new Error(`A minimum of ${Ee} parents is allowed, you provided ${t.parentMessageIds.length}`);if(t.parentMessageIds.length>Ie)throw new Error(`A maximum of ${Ie} parents is allowed, you provided ${t.parentMessageIds.length}`);if(new Set(t.parentMessageIds).size!==t.parentMessageIds.length)throw new Error("The milestone parents must be unique");const s=t.parentMessageIds.slice().sort();e.writeByte("payloadMilestone.numParents",t.parentMessageIds.length);for(let n=0;n<t.parentMessageIds.length;n++){if(s[n]!==t.parentMessageIds[n])throw new Error("The milestone parents must be lexographically sorted");e.writeFixedHex(`payloadMilestone.parentMessageId${n+1}`,u,t.parentMessageIds[n])}e.writeFixedHex("payloadMilestone.inclusionMerkleProof",c,t.inclusionMerkleProof),e.writeUInt32("payloadMilestone.nextPoWScore",t.nextPoWScore),e.writeUInt32("payloadMilestone.nextPoWScoreMilestoneIndex",t.nextPoWScoreMilestoneIndex),e.writeByte("payloadMilestone.publicKeysCount",t.publicKeys.length);for(let s=0;s<t.publicKeys.length;s++)e.writeFixedHex("payloadMilestone.publicKey",n.Ed25519.PUBLIC_KEY_SIZE,t.publicKeys[s]);me(e,t.receipt),e.writeByte("payloadMilestone.signaturesCount",t.signatures.length);for(let s=0;s<t.signatures.length;s++)e.writeFixedHex("payloadMilestone.signature",n.Ed25519.SIGNATURE_SIZE,t.signatures[s])}(e,t);else if(2===t.type)!function(e,t){if(t.index.length<1)throw new Error(`The indexation key length is ${t.index.length}, which is below the minimum size of 1`);if(t.index.length/2>O)throw new Error(`The indexation key length is ${t.index.length/2}, which exceeds the maximum size of 64`);e.writeUInt32("payloadIndexation.type",t.type),e.writeUInt16("payloadIndexation.indexLength",t.index.length/2),e.writeFixedHex("payloadIndexation.index",t.index.length/2,t.index),t.data?(e.writeUInt32("payloadIndexation.dataLength",t.data.length/2),e.writeFixedHex("payloadIndexation.data",t.data.length/2,t.data)):e.writeUInt32("payloadIndexation.dataLength",0)}(e,t);else if(3===t.type)!function(e,t){e.writeUInt32("payloadReceipt.type",t.type),e.writeUInt32("payloadReceipt.migratedAt",t.migratedAt),e.writeBoolean("payloadReceipt.final",t.final),I(e,t.funds),me(e,t.transaction)}(e,t);else{if(4!==t.type)throw new Error(`Unrecognized transaction type ${t.type}`);!function(e,t){e.writeUInt32("payloadTreasuryTransaction.type",t.type),$(e,t.input),Y(e,t.output)}(e,t)}else;const r=e.getWriteIndex();e.setWriteIndex(s),e.writeUInt32("payload.length",r-s-4),e.setWriteIndex(r)}const we=9+u+fe+8,Te=32768,Ie=8,Ee=1;function _e(e,t){var n,s,r,i;e.writeUInt64("message.networkId",a.default(null!==(n=t.networkId)&&void 0!==n?n:"0"));const o=null!==(r=null===(s=t.parentMessageIds)||void 0===s?void 0:s.length)&&void 0!==r?r:0;if(e.writeByte("message.numParents",o),t.parentMessageIds){if(o>Ie)throw new Error(`A maximum of ${Ie} parents is allowed, you provided ${o}`);if(new Set(t.parentMessageIds).size!==o)throw new Error("The message parents must be unique");const n=t.parentMessageIds.slice().sort();for(let s=0;s<o;s++){if(n[s]!==t.parentMessageIds[s])throw new Error("The message parents must be lexographically sorted");e.writeFixedHex(`message.parentMessageId${s+1}`,u,t.parentMessageIds[s])}}if(t.payload&&0!==t.payload.type&&2!==t.payload.type&&1!==t.payload.type)throw new Error("Messages can only contain transaction, indexation or milestone payloads");me(e,t.payload),e.writeUInt64("message.nonce",a.default(null!==(i=t.nonce)&&void 0!==i?i:"0"))}class Ue extends Error{constructor(e,t,n,s){super(e),this.route=t,this.httpStatus=n,this.code=s}}class xe{constructor(e,t){var n,s,r;if(!e)throw new Error("The endpoint can not be empty");if(this._endpoint=e.replace(/\/+$/,""),this._basePath=null!==(n=null==t?void 0:t.basePath)&&void 0!==n?n:"/api/v1/",this._powProvider=null==t?void 0:t.powProvider,this._timeout=null==t?void 0:t.timeout,this._userName=null==t?void 0:t.userName,this._password=null==t?void 0:t.password,this._headers=null==t?void 0:t.headers,this._userName&&this._password&&!this._endpoint.startsWith("https"))throw new Error("Basic authentication requires the endpoint to be https");if(this._userName&&this._password&&((null===(s=this._headers)||void 0===s?void 0:s.authorization)||(null===(r=this._headers)||void 0===r?void 0:r.Authorization)))throw new Error("You can not supply both user/pass and authorization header")}async health(){const e=await this.fetchStatus("/health");if(200===e)return!0;if(503===e)return!1;throw new Ue("Unexpected response code","/health",e)}async info(){return this.fetchJson("get","info")}async tips(){return this.fetchJson("get","tips")}async message(e){return this.fetchJson("get",`messages/${e}`)}async messageMetadata(e){return this.fetchJson("get",`messages/${e}/metadata`)}async messageRaw(e){return this.fetchBinary("get",`messages/${e}/raw`)}async messageSubmit(e){let t=0;if(this._powProvider){const n=await this.getPoWInfo();if(t=n.minPoWScore,!e.parentMessageIds||0===e.parentMessageIds.length){const t=await this.tips();e.parentMessageIds=t.tipMessageIds}e.networkId&&0!==e.networkId.length||(e.networkId=n.networkId.toString())}const n=new r.WriteStream;_e(n,e);const s=n.finalBytes();if(s.length>Te)throw new Error(`The message length is ${s.length}, which exceeds the maximum size of 32768`);if(this._powProvider){const n=await this._powProvider.pow(s,t);e.nonce=n.toString()}return(await this.fetchJson("post","messages",e)).messageId}async messageSubmitRaw(e){if(e.length>Te)throw new Error(`The message length is ${e.length}, which exceeds the maximum size of 32768`);if(this._powProvider&&n.ArrayHelper.equal(e.slice(-8),xe.NONCE_ZERO)){const{networkId:t,minPoWScore:n}=await this.getPoWInfo();r.BigIntHelper.write8(t,e,0);const s=await this._powProvider.pow(e,n);r.BigIntHelper.write8(a.default(s),e,e.length-8)}return(await this.fetchBinary("post","messages",e)).messageId}async messagesFind(e){return this.fetchJson("get",`messages?index=${"string"==typeof e?r.Converter.utf8ToHex(e):r.Converter.bytesToHex(e)}`)}async messageChildren(e){return this.fetchJson("get",`messages/${e}/children`)}async transactionIncludedMessage(e){return this.fetchJson("get",`transactions/${e}/included-message`)}async output(e){return this.fetchJson("get",`outputs/${e}`)}async address(e){return this.fetchJson("get",`addresses/${e}`)}async addressOutputs(e,t,n){const s=[];return void 0!==t&&s.push(`type=${t}`),void 0!==n&&s.push(`include-spent=${n}`),this.fetchJson("get",`addresses/${e}/outputs${this.combineQueryParams(s)}`)}async addressEd25519(e){if(!r.Converter.isHex(e))throw new Error("The supplied address does not appear to be hex format");return this.fetchJson("get",`addresses/ed25519/${e}`)}async addressEd25519Outputs(e,t,n){if(!r.Converter.isHex(e))throw new Error("The supplied address does not appear to be hex format");const s=[];return void 0!==t&&s.push(`type=${t}`),void 0!==n&&s.push(`include-spent=${n}`),this.fetchJson("get",`addresses/ed25519/${e}/outputs${this.combineQueryParams(s)}`)}async milestone(e){return this.fetchJson("get",`milestones/${e}`)}async milestoneUtxoChanges(e){return this.fetchJson("get",`milestones/${e}/utxo-changes`)}async treasury(){return this.fetchJson("get","treasury")}async receipts(e){return this.fetchJson("get","receipts"+(void 0!==e?`/${e}`:""))}async peers(){return this.fetchJson("get","peers")}async peerAdd(e,t){return this.fetchJson("post","peers",{multiAddress:e,alias:t})}async peerDelete(e){return this.fetchJson("delete",`peers/${e}`)}async peer(e){return this.fetchJson("get",`peers/${e}`)}async fetchStatus(e){return(await this.fetchWithTimeout("get",e)).status}async fetchJson(e,t,n){const s=await this.fetchWithTimeout(e,`${this._basePath}${t}`,{"Content-Type":"application/json"},n?JSON.stringify(n):void 0);let r,i;if(s.ok){if(204===s.status)return{};try{const e=await s.json();if(!e.error)return e.data;r=e.error.message,i=e.error.code}catch{}}if(!r)try{const e=await s.json();e.error&&(r=e.error.message,i=e.error.code)}catch{}if(!r)try{const e=await s.text();if(e.length>0){const t=/code=(\d+), message=(.*)/.exec(e);3===(null==t?void 0:t.length)?(i=t[1],r=t[2]):r=e}}catch{}throw new Ue(null!=r?r:s.statusText,t,s.status,null!=i?i:s.status.toString())}async fetchBinary(e,t,n){var s,r,i;const o=await this.fetchWithTimeout(e,`${this._basePath}${t}`,{"Content-Type":"application/octet-stream"},n);let a;if(o.ok){if("get"===e)return new Uint8Array(await o.arrayBuffer());if(a=await o.json(),!(null==a?void 0:a.error))return null==a?void 0:a.data}throw a||(a=await o.json()),new Ue(null!==(r=null===(s=null==a?void 0:a.error)||void 0===s?void 0:s.message)&&void 0!==r?r:o.statusText,t,o.status,null===(i=null==a?void 0:a.error)||void 0===i?void 0:i.code)}async fetchWithTimeout(e,t,n,s){let i,o;void 0!==this._timeout&&(i=new AbortController,o=setTimeout((()=>{i&&i.abort()}),this._timeout));const a={};if(this._headers)for(const e in this._headers)a[e]=this._headers[e];if(n)for(const e in n)a[e]=n[e];if(this._userName&&this._password){const e=r.Converter.bytesToBase64(r.Converter.utf8ToBytes(`${this._userName}:${this._password}`));a.Authorization=`Basic ${e}`}try{return await fetch(`${this._endpoint}${t}`,{method:e,headers:a,body:s,signal:i?i.signal:void 0})}catch(e){throw e instanceof Error&&"AbortError"===e.name?new Error("Timeout"):e}finally{o&&clearTimeout(o)}}combineQueryParams(e){return e.length>0?`?${e.join("&")}`:""}async getPoWInfo(){const e=await this.info(),t=n.Blake2b.sum256(r.Converter.utf8ToBytes(e.networkId));return{networkId:r.BigIntHelper.read8(t,0),minPoWScore:e.minPoWScore}}}xe.NONCE_ZERO=new Uint8Array([0,0,0,0,0,0,0,0]);class $e{static encodedLen(e){return e.length*$e.TRITS_PER_TRYTE}static encode(e,t,n){let s=0;for(let r=0;r<n.length;r++){const i=364+(n[r]<<24>>24),o=Math.trunc(i%27),a=Math.trunc(i/27);e[t+s]=$e.TRYTE_VALUE_TO_TRITS[o][0],e[t+s+1]=$e.TRYTE_VALUE_TO_TRITS[o][1],e[t+s+2]=$e.TRYTE_VALUE_TO_TRITS[o][2],e[t+s+3]=$e.TRYTE_VALUE_TO_TRITS[a][0],e[t+s+4]=$e.TRYTE_VALUE_TO_TRITS[a][1],e[t+s+5]=$e.TRYTE_VALUE_TO_TRITS[a][2],s+=6}return s}}$e.TRYTE_VALUE_TO_TRITS=[[-1,-1,-1],[0,-1,-1],[1,-1,-1],[-1,0,-1],[0,0,-1],[1,0,-1],[-1,1,-1],[0,1,-1],[1,1,-1],[-1,-1,0],[0,-1,0],[1,-1,0],[-1,0,0],[0,0,0],[1,0,0],[-1,1,0],[0,1,0],[1,1,0],[-1,-1,1],[0,-1,1],[1,-1,1],[-1,0,1],[0,0,1],[1,0,1],[-1,1,1],[0,1,1],[1,1,1]],$e.TRITS_PER_TRYTE=3;const Se="m/44'/4218'";function Pe(e,t){t||(e.isInternal?(e.isInternal=!1,e.addressIndex++):e.isInternal=!0);const s=new n.Bip32Path(Se);return s.pushHardened(e.accountIndex),s.pushHardened(e.isInternal?1:0),s.pushHardened(e.addressIndex),s.toString()}class Me{static toBech32(e,t,s){const r=new Uint8Array(1+t.length);return r[0]=e,r.set(t,1),n.Bech32.encode(s,r)}static fromBech32(e,t){const s=n.Bech32.decode(e);if(s){if(s.humanReadablePart!==t)throw new Error(`The hrp part of the address should be ${t}, it is ${s.humanReadablePart}`);if(0===s.data.length)throw new Error("The data part of the address should be at least length 1, it is 0");return{addressType:s.data[0],addressBytes:s.data.slice(1)}}}static matches(e,t){return n.Bech32.matches(t,e)}}async function Ae(e,t,n,s){var r;return Ne(e,t,{accountIndex:n,addressIndex:null!==(r=null==s?void 0:s.startIndex)&&void 0!==r?r:0,isInternal:!1},Pe,s)}async function Ne(e,t,s,i,o){var a,u;const l="string"==typeof e?new xe(e):e,c=await l.info(),h=null!==(a=null==o?void 0:o.requiredCount)&&void 0!==a?a:Number.MAX_SAFE_INTEGER,p=null!==(u=null==o?void 0:o.zeroCount)&&void 0!==u?u:20;let y=!1;const f=[];let g=!0,m=0;do{const e=i(s,g);g=!1;const o=t.generateSeedFromPath(new n.Bip32Path(e)),a=new d(o.keyPair().publicKey).toAddress(),u=r.Converter.bytesToHex(a),w=await l.addressEd25519(u);0===w.balance?(m++,m>=p&&(y=!0)):(f.push({address:Me.toBech32(0,a,c.bech32HRP),path:e,balance:w.balance}),f.length===h&&(y=!0))}while(!y);return f}async function Re(e,t){const n="string"==typeof e?new xe(e):e,s=await n.message(t);if(!s)throw new Error("The message does not exist.");const r=await n.tips();r.tipMessageIds.includes(t)||r.tipMessageIds.unshift(t),r.tipMessageIds.length>Ie&&(r.tipMessageIds=r.tipMessageIds.slice(0,Ie)),r.tipMessageIds.sort();const i={parentMessageIds:r.tipMessageIds};return{message:s,messageId:await n.messageSubmit(i)}}async function ve(e,t){const n="string"==typeof e?new xe(e):e,s=await n.message(t);if(!s)throw new Error("The message does not exist.");const r={payload:s.payload};return{message:s,messageId:await n.messageSubmit(r)}}async function Be(e,t,n,s){const r="string"==typeof e?new xe(e):e,i={payload:Oe(t,n,s)};return{messageId:await r.messageSubmit(i),message:i}}function Oe(e,t,s){if(!e||0===e.length)throw new Error("You must specify some inputs");if(!t||0===t.length)throw new Error("You must specify some outputs");let i;if(null==s?void 0:s.key){if(i="string"==typeof s.key?r.Converter.utf8ToHex(s.key):r.Converter.bytesToHex(s.key),i.length/2<1)throw new Error(`The indexation key length is ${i.length/2}, which is below the minimum size of 1`);if(i.length/2>O)throw new Error(`The indexation key length is ${i.length/2}, which exceeds the maximum size of 64`)}const o=[];for(const e of t){if(0!==e.addressType)throw new Error(`Unrecognized output address type ${e.addressType}`);{const t={type:0,address:{type:e.addressType,address:e.address},amount:e.amount},n=new r.WriteStream;Z(n,t),o.push({output:t,serialized:n.finalHex()})}}const a=e.map((e=>{const t=new r.WriteStream;return B(t,e.input),{...e,serialized:t.finalHex()}})).sort(((e,t)=>e.serialized.localeCompare(t.serialized))),d=o.sort(((e,t)=>e.serialized.localeCompare(t.serialized))),u={type:0,inputs:a.map((e=>e.input)),outputs:d.map((e=>e.output)),payload:i?{type:2,index:i,data:(null==s?void 0:s.data)?"string"==typeof s.data?r.Converter.utf8ToHex(s.data):r.Converter.bytesToHex(s.data):void 0}:void 0},l=new r.WriteStream;j(l,u);const c=l.finalBytes(),h=n.Blake2b.sum256(c),p=[],y={};for(const e of a){const t=r.Converter.bytesToHex(e.addressKeyPair.publicKey);y[t]?p.push({type:1,reference:y[t].unlockIndex}):(p.push({type:0,signature:{type:0,publicKey:t,signature:r.Converter.bytesToHex(n.Ed25519.sign(e.addressKeyPair.privateKey,h))}}),y[t]={keyPair:e.addressKeyPair,unlockIndex:p.length-1})}return{type:0,essence:u,unlockBlocks:p}}async function He(e,t,n,s,i,o){var a;const d="string"==typeof e?new xe(e):e,u=await d.info(),l=s.map((e=>{const t=Me.fromBech32(e.addressBech32,u.bech32HRP);if(!t)throw new Error("Unable to decode bech32 address");return{address:r.Converter.bytesToHex(t.addressBytes),addressType:t.addressType,amount:e.amount}}));return be(e,t,{accountIndex:n,addressIndex:null!==(a=null==o?void 0:o.startIndex)&&void 0!==a?a:0,isInternal:!1},Pe,l,i,null==o?void 0:o.zeroCount)}async function ke(e,t,n,s,r,i){var o;const a=s.map((e=>({address:e.addressEd25519,addressType:0,amount:e.amount})));return be(e,t,{accountIndex:n,addressIndex:null!==(o=null==i?void 0:i.startIndex)&&void 0!==o?o:0,isInternal:!1},Pe,a,r,null==i?void 0:i.zeroCount)}async function be(e,t,n,s,r,i,o){const a=await Le(e,t,n,s,r,o),d=await Be(e,a,r,i);return{messageId:d.messageId,message:d.message}}async function Le(e,t,s,i,o,a=5){const u="string"==typeof e?new xe(e):e;let l=0;for(const e of o)l+=e.amount;let c=0;const h=[];let p=!1,y=!0,f=0;do{const e=i(s,y);y=!1;const g=t.generateSeedFromPath(new n.Bip32Path(e)).keyPair(),m=new d(g.publicKey),w=r.Converter.bytesToHex(m.toAddress()),T=await u.addressEd25519Outputs(w);if(0===T.count)f++,f>=a&&(p=!0);else for(const e of T.outputIds){const t=await u.output(e);if(!t.isSpent&&c<l)if(0===t.output.amount)f++,f>=a&&(p=!0);else{c+=t.output.amount;const e={type:0,transactionId:t.transactionId,transactionOutputIndex:t.outputIndex};h.push({input:e,addressKeyPair:g}),c>=l&&(c-l>0&&0===t.output.type&&o.push({amount:c-l,address:t.output.address.address,addressType:t.output.address.type}),p=!0)}}}while(!p);if(c<l)throw new Error("There are not enough funds in the inputs for the required balance");return h}Me.BECH32_DEFAULT_HRP_MAIN="iota",Me.BECH32_DEFAULT_HRP_DEV="atoi";var Ce;e.ConflictReason=void 0,(Ce=e.ConflictReason||(e.ConflictReason={}))[Ce.none=0]="none",Ce[Ce.inputUTXOAlreadySpent=1]="inputUTXOAlreadySpent",Ce[Ce.inputUTXOAlreadySpentInThisMilestone=2]="inputUTXOAlreadySpentInThisMilestone",Ce[Ce.inputUTXONotFound=3]="inputUTXONotFound",Ce[Ce.inputOutputSumMismatch=4]="inputOutputSumMismatch",Ce[Ce.invalidSignature=5]="invalidSignature",Ce[Ce.invalidDustAllowance=6]="invalidDustAllowance",Ce[Ce.semanticValidationFailed=255]="semanticValidationFailed";class ze{static score(e){const t=e.slice(0,-8),s=n.Blake2b.sum256(t),i=r.BigIntHelper.read8(e,e.length-8),o=ze.trailingZeros(s,i);return Math.pow(3,o)/e.length}static calculateTargetZeros(e,t){return Math.ceil(Math.log(e.length*t)/this.LN3)}static trailingZeros(e,t){const s=new Int8Array(n.Curl.HASH_LENGTH),i=$e.encode(s,0,e),o=new Uint8Array(8);r.BigIntHelper.write8(t,o,0),$e.encode(s,i,o);const a=new n.Curl;a.absorb(s,0,n.Curl.HASH_LENGTH);const d=new Int8Array(n.Curl.HASH_LENGTH);return a.squeeze(d,0,n.Curl.HASH_LENGTH),ze.trinaryTrailingZeros(d)}static trinaryTrailingZeros(e,t=e.length){let n=0;for(let s=t-1;s>=0&&0===e[s];s--)n++;return n}static performPow(e,t,s){let i,o=a.default(s);const d=new Int8Array(n.Curl.HASH_LENGTH),u=$e.encode(d,0,e),l=new Uint8Array(8);do{r.BigIntHelper.write8(o,l,0),$e.encode(d,u,l);const e=new Int8Array(n.Curl.STATE_LENGTH);e.set(d,0),n.Curl.transform(e,81),ze.trinaryTrailingZeros(e,n.Curl.HASH_LENGTH)>=t?i=o:o=o.plus(1)}while(void 0===i);return i?i.toString():"0"}}ze.LN3=1.0986122886681098;const Fe={[e.ConflictReason.none]:"Not conflicting",[e.ConflictReason.inputUTXOAlreadySpent]:"The referenced UTXO was already spent",[e.ConflictReason.inputUTXOAlreadySpentInThisMilestone]:"The referenced UTXO was already spent while confirming this milestone",[e.ConflictReason.inputUTXONotFound]:"The referenced UTXO cannot be found",[e.ConflictReason.inputOutputSumMismatch]:"The sum of the inputs and output values does not match",[e.ConflictReason.invalidSignature]:"The unlock block signature is invalid",[e.ConflictReason.invalidDustAllowance]:"The dust allowance for the address is invalid",[e.ConflictReason.semanticValidationFailed]:"The semantic validation failed"};class Ke{constructor(e){this._secretKey=null!=e?e:new Uint8Array}static fromMnemonic(e){return new Ke(n.Bip39.mnemonicToSeed(e))}keyPair(){const e=n.Ed25519.keyPairFromSeed(this._secretKey);return{publicKey:e.publicKey,privateKey:e.privateKey}}generateSeedFromPath(e){const t=n.Slip0010.derivePath(this._secretKey,e);return new Ke(t.privateKey)}toBytes(){return this._secretKey}}let De=(e,t)=>void 0!==t?console.log(e,t):console.log(e);function Ye(e,t){t&&(0===t.type?Ge(e,t):1===t.type?qe(e,t):2===t.type?We(e,t):3===t.type?Xe(e,t):4===t.type&&Ze(e,t))}function Ge(e,t){if(t){if(De(`${e}Transaction Payload`),0===t.essence.type){if(t.essence.inputs){De(`${e}\tInputs:`,t.essence.inputs.length);for(const n of t.essence.inputs)Ve(`${e}\t\t`,n)}if(t.essence.outputs){De(`${e}\tOutputs:`,t.essence.outputs.length);for(const n of t.essence.outputs)Qe(`${e}\t\t`,n)}}if(t.unlockBlocks){De(`${e}\tUnlock Blocks:`,t.unlockBlocks.length);for(const n of t.unlockBlocks)et(`${e}\t\t`,n)}}}function We(e,t){t&&(De(`${e}Indexation Payload`),De(`${e}\tIndex:`,r.Converter.hexToUtf8(t.index)),De(`${e}\tData:`,t.data?r.Converter.hexToUtf8(t.data):"None"))}function qe(e,t){if(t){De(`${e}Milestone Payload`),De(`${e}\tIndex:`,t.index),De(`${e}\tTimestamp:`,t.timestamp);for(let n=0;n<t.parentMessageIds.length;n++)De(`${e}\tParent ${n+1}:`,t.parentMessageIds[n]);De(`${e}\tInclusion Merkle Proof:`,t.inclusionMerkleProof),t.nextPoWScore&&De(`${e}\tNext PoW Score:`,t.nextPoWScore),t.nextPoWScoreMilestoneIndex&&De(`${e}\tNext PoW Score Milestone Index:`,t.nextPoWScoreMilestoneIndex),De(`${e}\tPublic Keys:`,t.publicKeys),De(`${e}\tSignatures:`,t.signatures),Xe(`${e}\t`,t.receipt)}}function Xe(e,t){if(t){De(`${e}Receipt Payload`),De(`${e}\tMigrated At:`,t.migratedAt),De(`${e}\tFinal:`,t.final),De(`${e}\tFunds:`,t.funds.length);for(const n of t.funds)tt(`${e}\t\t`,n);Ze(`${e}\t\t`,t.transaction)}}function Ze(e,t){t&&(De(`${e}Treasury Transaction Payload`),Ve(e,t.input),Qe(e,t.output))}function Je(e,t){0===(null==t?void 0:t.type)&&(De(`${e}Ed25519 Address`),De(`${e}\tAddress:`,t.address))}function je(e,t){0===(null==t?void 0:t.type)&&(De(`${e}Ed25519 Signature`),De(`${e}\tPublic Key:`,t.publicKey),De(`${e}\tSignature:`,t.signature))}function Ve(e,t){t&&(0===t.type?(De(`${e}UTXO Input`),De(`${e}\tTransaction Id:`,t.transactionId),De(`${e}\tTransaction Output Index:`,t.transactionOutputIndex)):1===t.type&&(De(`${e}Treasury Input`),De(`${e}\tMilestone Hash:`,t.milestoneId)))}function Qe(e,t){t&&(0===t.type?(De(`${e}Signature Locked Single Output`),Je(`${e}\t\t`,t.address),De(`${e}\t\tAmount:`,t.amount)):1===t.type?(De(`${e}Signature Locked Dust Allowance Output`),Je(`${e}\t\t`,t.address),De(`${e}\t\tAmount:`,t.amount)):2===t.type&&(De(`${e}Treasury Output`),De(`${e}\t\tAmount:`,t.amount)))}function et(e,t){t&&(0===t.type?(De(`${e}\tSignature Unlock Block`),je(`${e}\t\t`,t.signature)):1===t.type&&(De(`${e}\tReference Unlock Block`),De(`${e}\t\tReference:`,t.reference)))}function tt(e,t){t&&(De(`${e}\tFund`),De(`${e}\t\tTail Transaction Hash:`,t.tailTransactionHash),Je(`${e}\t\t`,t.address),De(`${e}\t\tDeposit:`,t.deposit))}class nt{static formatBest(e,t=2){return nt.formatUnits(e,nt.calculateBest(e),t)}static formatUnits(e,t,n=2){if(!nt.UNIT_MAP[t])throw new Error(`Unrecognized unit ${t}`);return e?"i"===t?`${e} i`:`${nt.convertUnits(e,"i",t).toFixed(n)} ${t}`:`0 ${t}`}static calculateBest(e){let t="i";if(!e)return t;const n=Math.abs(e).toString().length;return n>nt.UNIT_MAP.Pi.dp?t="Pi":n>nt.UNIT_MAP.Ti.dp?t="Ti":n>nt.UNIT_MAP.Gi.dp?t="Gi":n>nt.UNIT_MAP.Mi.dp?t="Mi":n>nt.UNIT_MAP.Ki.dp&&(t="Ki"),t}static convertUnits(e,t,n){if(!e)return 0;if(!nt.UNIT_MAP[t])throw new Error(`Unrecognized fromUnit ${t}`);if(!nt.UNIT_MAP[n])throw new Error(`Unrecognized toUnit ${n}`);if("i"===t&&e%1!=0)throw new Error("If fromUnit is 'i' the value must be an integer value");if(t===n)return Number(e);const s=e<0?-1:1,r=Math.abs(Number(e))*nt.UNIT_MAP[t].val/nt.UNIT_MAP[n].val,i=nt.UNIT_MAP[n].dp;let o=r.toString();o.includes("e")&&(o=r.toFixed(Number.parseInt(o.split("-")[1],10)));const a=o.split(".");return 1===a.length&&a.push("0"),a[1]=a[1].slice(0,i),Number.parseFloat(`${a[0]}.${a[1]}`)*s}}nt.UNIT_MAP={i:{val:1,dp:0},Ki:{val:1e3,dp:3},Mi:{val:1e6,dp:6},Gi:{val:1e9,dp:9},Ti:{val:1e12,dp:12},Pi:{val:1e15,dp:15}},e.ALIAS_ADDRESS_TYPE=8,e.ALIAS_OUTPUT_TYPE=4,e.ALIAS_UNLOCK_BLOCK_TYPE=2,e.ARRAY_LENGTH=2,e.B1T6=$e,e.BLS_ADDRESS_TYPE=1,e.Bech32Helper=Me,e.CONFLICT_REASON_STRINGS=Fe,e.ClientError=Ue,e.ED25519_ADDRESS_TYPE=0,e.ED25519_SEED_TYPE=1,e.ED25519_SIGNATURE_TYPE=0,e.EXPIRATION_MILESTONE_INDEX_FEATURE_BLOCK_TYPE=5,e.EXPIRATION_UNIX_FEATURE_BLOCK_TYPE=6,e.EXTENDED_OUTPUT_TYPE=3,e.Ed25519Address=d,e.Ed25519Seed=Ke,e.FOUNDRY_OUTPUT_TYPE=5,e.INDEXATION_FEATURE_BLOCK_TYPE=8,e.INDEXATION_PAYLOAD_TYPE=2,e.IOTA_BIP44_BASE_PATH=Se,e.ISSUER_FEATURE_BLOCK_TYPE=1,e.LocalPowProvider=class{async pow(e,t){const s=e.slice(0,-8),r=n.Blake2b.sum256(s),i=ze.calculateTargetZeros(e,t);return ze.performPow(r,i,"0").toString()}},e.MAX_FUNDS_COUNT=127,e.MAX_INPUT_COUNT=127,e.MAX_MESSAGE_LENGTH=Te,e.MAX_NUMBER_PARENTS=Ie,e.MAX_OUTPUT_COUNT=127,e.MERKLE_PROOF_LENGTH=c,e.MESSAGE_ID_LENGTH=u,e.METADATA_FEATURE_BLOCK_TYPE=7,e.MILESTONE_PAYLOAD_TYPE=1,e.MIN_ADDRESS_LENGTH=f,e.MIN_ED25519_ADDRESS_LENGTH=h,e.MIN_ED25519_SIGNATURE_LENGTH=ee,e.MIN_INPUT_COUNT=1,e.MIN_INPUT_LENGTH=A,e.MIN_MIGRATED_FUNDS_LENGTH=w,e.MIN_NUMBER_PARENTS=Ee,e.MIN_OUTPUT_COUNT=1,e.MIN_OUTPUT_LENGTH=G,e.MIN_PAYLOAD_LENGTH=fe,e.MIN_REFERENCE_UNLOCK_BLOCK_LENGTH=3,e.MIN_SIGNATURE_LENGTH=se,e.MIN_SIGNATURE_UNLOCK_BLOCK_LENGTH=oe,e.MIN_SIG_LOCKED_DUST_ALLOWANCE_OUTPUT_LENGTH=b,e.MIN_SIMPLE_OUTPUT_LENGTH=z,e.MIN_TRANSACTION_ESSENCE_LENGTH=9,e.MIN_TREASURY_INPUT_LENGTH=U,e.MIN_TREASURY_OUTPUT_LENGTH=9,e.MIN_UNLOCK_BLOCK_LENGTH=ue,e.MIN_UTXO_INPUT_LENGTH=S,e.NFTUNLOCK_BLOCK_TYPE=3,e.NFT_ADDRESS_TYPE=16,e.NFT_OUTPUT_TYPE=6,e.PowHelper=ze,e.RECEIPT_PAYLOAD_TYPE=3,e.REFERENCE_UNLOCK_BLOCK_TYPE=1,e.RETURN_FEATURE_BLOCK_TYPE=2,e.SENDER_FEATURE_BLOCK_TYPE=0,e.SIGNATURE_UNLOCK_BLOCK_TYPE=0,e.SIG_LOCKED_DUST_ALLOWANCE_OUTPUT_TYPE=1,e.SIMPLE_OUTPUT_TYPE=0,e.SIMPLE_TOKEN_SCHEME_TYPE=0,e.SMALL_TYPE_LENGTH=1,e.STRING_LENGTH=2,e.SingleNodeClient=xe,e.TAIL_HASH_LENGTH=49,e.TIMELOCK_MILESTONE_INDEX_FEATURE_BLOCK_TYPE=3,e.TIMELOCK_UNIX_FEATURE_BLOCK_TYPE=4,e.TRANSACTION_ESSENCE_TYPE=0,e.TRANSACTION_ID_LENGTH=l,e.TRANSACTION_PAYLOAD_TYPE=0,e.TREASURY_INPUT_TYPE=1,e.TREASURY_OUTPUT_TYPE=2,e.TREASURY_TRANSACTION_PAYLOAD_TYPE=4,e.TYPE_LENGTH=4,e.UINT16_SIZE=2,e.UINT32_SIZE=4,e.UINT64_SIZE=8,e.UINT8_SIZE=1,e.UTXO_INPUT_TYPE=0,e.UnitsHelper=nt,e.buildTransactionPayload=Oe,e.calculateInputs=Le,e.deserializeAddress=g,e.deserializeEd25519Address=p,e.deserializeEd25519Signature=te,e.deserializeFunds=T,e.deserializeInput=v,e.deserializeInputs=N,e.deserializeMessage=function(e){if(!e.hasRemaining(we))throw new Error(`Message data is ${e.length()} in length which is less than the minimimum size required of ${we}`);const t=e.readUInt64("message.networkId"),n=e.readByte("message.numParents"),s=[];for(let t=0;t<n;t++){const n=e.readFixedHex(`message.parentMessageId${t}`,u);s.push(n)}const r=ge(e);if(r&&(3===r.type||4===r.type))throw new Error("Messages can not contain receipt or treasury transaction payloads");const i=e.readUInt64("message.nonce"),o=e.unused();if(0!==o)throw new Error(`Message data length ${e.length()} has unused data ${o}`);return{networkId:t.toString(10),parentMessageIds:s,payload:r,nonce:i.toString(10)}},e.deserializeMigratedFunds=E,e.deserializeOutput=X,e.deserializeOutputs=W,e.deserializePayload=ge,e.deserializeReferenceUnlockBlock=V,e.deserializeSigLockedDustAllowanceOutput=L,e.deserializeSignature=re,e.deserializeSignatureUnlockBlock=ae,e.deserializeSimpleOutput=F,e.deserializeTransactionEssence=J,e.deserializeTreasuryInput=x,e.deserializeTreasuryOutput=D,e.deserializeUTXOInput=P,e.deserializeUnlockBlock=he,e.deserializeUnlockBlocks=le,e.generateBip44Address=Pe,e.generateBip44Path=function(e,t,s){const r=new n.Bip32Path(Se);return r.pushHardened(e),r.pushHardened(s?1:0),r.pushHardened(t),r},e.getBalance=async function(e,t,n,s){const r=await Ae(e,t,n,s);let i=0;for(const e of r)i+=e.balance;return i},e.getUnspentAddress=async function(e,t,n,s){const r=await Ae(e,t,n,{startIndex:null==s?void 0:s.startIndex,zeroCount:null==s?void 0:s.zeroCount,requiredCount:1});return r.length>0?r[0]:void 0},e.getUnspentAddresses=Ae,e.getUnspentAddressesWithAddressGenerator=Ne,e.logAddress=Je,e.logFunds=tt,e.logIndexationPayload=We,e.logInfo=function(e,t){De(`${e}\tName:`,t.name),De(`${e}\tVersion:`,t.version),De(`${e}\tNetwork Id:`,t.networkId),De(`${e}\tIs Healthy:`,t.isHealthy),De(`${e}\tMin PoW Score:`,t.minPoWScore),De(`${e}\tBech32 HRP:`,t.bech32HRP),De(`${e}\tLatest Milestone Index:`,t.latestMilestoneIndex),De(`${e}\tLatest Milestone Timestamp:`,t.latestMilestoneTimestamp),De(`${e}\tConfirmed Milestone Index:`,t.confirmedMilestoneIndex),De(`${e}\tMessages Per Second:`,t.messagesPerSecond),De(`${e}\tReferenced Messages Per Second:`,t.referencedMessagesPerSecond),De(`${e}\tReferenced Rate:`,t.referencedRate),De(`${e}\tPruning Index:`,t.pruningIndex),De(`${e}\tFeatures:`,t.features)},e.logInput=Ve,e.logMessage=function(e,t){if(De(`${e}\tNetwork Id:`,t.networkId),t.parentMessageIds)for(let n=0;n<t.parentMessageIds.length;n++)De(`${e}\tParent ${n+1} Message Id:`,t.parentMessageIds[n]);Ye(`${e}\t`,t.payload),void 0!==t.nonce&&De(`${e}\tNonce:`,t.nonce)},e.logMessageMetadata=function(e,t){if(De(`${e}\tMessage Id:`,t.messageId),t.parentMessageIds)for(let n=0;n<t.parentMessageIds.length;n++)De(`${e}\tParent ${n+1} Message Id:`,t.parentMessageIds[n]);void 0!==t.isSolid&&De(`${e}\tIs Solid:`,t.isSolid),void 0!==t.milestoneIndex&&De(`${e}\tMilestone Index:`,t.milestoneIndex),void 0!==t.referencedByMilestoneIndex&&De(`${e}\tReferenced By Milestone Index:`,t.referencedByMilestoneIndex),De(`${e}\tLedger Inclusion State:`,t.ledgerInclusionState),void 0!==t.conflictReason&&De(`${e}\tConflict Reason:`,t.conflictReason),void 0!==t.shouldPromote&&De(`${e}\tShould Promote:`,t.shouldPromote),void 0!==t.shouldReattach&&De(`${e}\tShould Reattach:`,t.shouldReattach)},e.logMilestonePayload=qe,e.logOutput=Qe,e.logPayload=Ye,e.logReceiptPayload=Xe,e.logSignature=je,e.logTips=function(e,t){if(t.tipMessageIds)for(let n=0;n<t.tipMessageIds.length;n++)De(`${e}\tTip ${n+1} Message Id:`,t.tipMessageIds[n])},e.logTransactionPayload=Ge,e.logTreasuryTransactionPayload=Ze,e.logUnlockBlock=et,e.promote=Re,e.reattach=ve,e.retrieveData=async function(e,t){const n="string"==typeof e?new xe(e):e,s=await n.message(t);if(null==s?void 0:s.payload){let e;if(0===s.payload.type?e=s.payload.essence.payload:2===s.payload.type&&(e=s.payload),e)return{index:r.Converter.hexToBytes(e.index),data:e.data?r.Converter.hexToBytes(e.data):void 0}}},e.retry=async function(e,t){const n="string"==typeof e?new xe(e):e,s=await n.messageMetadata(t);if(!s)throw new Error("The message does not exist.");if(s.shouldPromote)return Re(e,t);if(s.shouldReattach)return ve(e,t);throw new Error("The message should not be promoted or reattached.")},e.send=async function(e,t,n,s,r,i,o){return He(e,t,n,[{addressBech32:s,amount:r}],i,o)},e.sendAdvanced=Be,e.sendData=async function(e,t,n){const s="string"==typeof e?new xe(e):e;if(!t)throw new Error("indexationKey must not be empty");const i="string"==typeof t?r.Converter.utf8ToHex(t):r.Converter.bytesToHex(t);if(i.length/2<1)throw new Error(`The indexation key length is ${i.length/2}, which is below the minimum size of 1`);if(i.length/2>O)throw new Error(`The indexation key length is ${i.length/2}, which exceeds the maximum size of 64`);const o={payload:{type:2,index:i,data:n?"string"==typeof n?r.Converter.utf8ToHex(n):r.Converter.bytesToHex(n):void 0}};return{message:o,messageId:await s.messageSubmit(o)}},e.sendEd25519=async function(e,t,n,s,r,i,o){return ke(e,t,n,[{addressEd25519:s,amount:r}],i,o)},e.sendMultiple=He,e.sendMultipleEd25519=ke,e.sendWithAddressGenerator=be,e.serializeAddress=m,e.serializeEd25519Address=y,e.serializeEd25519Signature=ne,e.serializeFunds=I,e.serializeInput=B,e.serializeInputs=R,e.serializeMessage=_e,e.serializeMigratedFunds=_,e.serializeOutput=Z,e.serializeOutputs=q,e.serializePayload=me,e.serializeReferenceUnlockBlock=Q,e.serializeSigLockedDustAllowanceOutput=C,e.serializeSignature=ie,e.serializeSignatureUnlockBlock=de,e.serializeSimpleOutput=K,e.serializeTransactionEssence=j,e.serializeTreasuryInput=$,e.serializeTreasuryOutput=Y,e.serializeUTXOInput=M,e.serializeUnlockBlock=pe,e.serializeUnlockBlocks=ce,e.setLogger=function(e){De=e},Object.defineProperty(e,"__esModule",{value:!0})}));